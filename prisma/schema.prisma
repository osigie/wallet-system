// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  firstName   String
  lastName    String
  password String
  isDisabled  Boolean      @default(false)
  trialCount  Int          @default(0)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userDetails UserDetails?
  accounts     Account[]
}

model UserDetails {
  state         String
  sex           String
  maritalStatus String
  address       String
  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int    @unique
}

model Account {
  id               String        @id @default(uuid())
  userId           Int
  balance          Float         @default(0.0)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  user             User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  currency         String        @default("Naira")
  transactionsFrom Transaction[] @relation("transactionsFrom")
  transactionsTo   Transaction[] @relation("transactionsTo")
}

model Transaction {
  id            Int             @id @default(autoincrement())
  fromAccountId String
  toAccountId   String
  amount        Float
  description   String
  createdAt     DateTime        @default(now())

  fromAccount Account @relation("transactionsFrom", fields: [fromAccountId], references: [id], onDelete: Cascade)
  toAccount   Account @relation("transactionsTo", fields: [toAccountId], references: [id], onDelete: Cascade)
}


